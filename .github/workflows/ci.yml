---
name: CI

on:
  push:

jobs:
  lint:
    runs-on: ubuntu-latest
    name: Lint
    steps:
      - uses: actions/checkout@v2
      - uses: github/super-linter@v3
        env:
          VALIDATE_ALL_CODEBASE: false
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  sast:
    runs-on: ubuntu-latest
    needs: lint
    name: Static Code Analysis Tests
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - run: pip install -r requirements.txt
      - run: bandit app.py
  unittests:
    runs-on: ubuntu-latest
    needs: sast
    name: Unit Tests
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - run: pip install -r requirements.txt
      - run: python -m pytest
  build:
    runs-on: ubuntu-latest
    # needs: unittests
    name: Build
    env:
      CONTAINER_REGISTRY: ghcr.io/tristanallaire/github-actions-dojo
      CONTAINER_COMMIT_IMAGE: ghcr.io/tristanallaire/github-actions-dojo:${{ github.sha }}
      CONTAINER_LATEST_IMAGE: ghcr.io/tristanallaire/github-actions-dojo:latest
    steps:
      - uses: actions/checkout@v2
      - name: Build and push Docker image
        run: |
          echo $PAT | docker login ghcr.io -u tristanallaire --password-stdin
          docker build --build-arg APP_VERSION="$APP_VERSION" -t $CONTAINER_COMMIT_IMAGE  -t $CONTAINER_LATEST_IMAGE .
          docker push $CONTAINER_COMMIT_IMAGE
          docker push $CONTAINER_LATEST_IMAGE
        env:
          PAT: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          APP_VERSION: ${{ github.sha }}
  inttests:
    name: Integ tests
    needs: build
    runs-on: ubuntu-latest
    services:
      my-app:
        image: ghcr.io/tristanallaire/github-actions-dojo:${{ github.sha }}
        credentials: 
          username: tristanallaire
          password: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        ports: 
          - "8000:8000"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
      - run: npm install -g bats
      - run: bats -v
      - run: github-actions-scripts/test_bats.sh
    

